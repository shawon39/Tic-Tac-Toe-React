{"version":3,"sources":["components/BoardComp/GridComp/GridComp.js","components/StatusComp/StatusComp.js","components/BoardComp/BoardComp.js","App.js","serviceWorker.js","index.js"],"names":["GridComp","onClick","this","props","HandleGrid","name","className","mark","Component","StatusComp","myState","isEndGame","playerMove","winner","used","Map","BoardComp","state","mark1","mark2","mark3","mark4","mark5","mark6","mark7","mark8","mark9","count","resultCheck","mk","move","ans","setState","event","Error","myNameAttr","target","getAttribute","console","log","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.87c84b8a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './GridComp.css'\r\n\r\nclass GridComp extends Component {\r\n  render() {\r\n    return (\r\n      <div onClick={this.props.HandleGrid} name={this.props.name} className='gridClass'>\r\n        <p>{this.props.mark}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GridComp\r\n","import React, { Component } from \"react\";\r\nimport \"./StatusComp.css\";\r\n\r\nclass StatusComp extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"statusClass\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{this.props.myState.isEndGame !== true ? (\r\n\t\t\t\t\t\t<p>Next Mark : Player {this.props.myState.playerMove}</p>\r\n\t\t\t\t\t) : (this.props.myState.winner === \"!\" ? (\r\n\t\t\t\t\t\t<p>Match Tied !!!</p>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<p>{this.props.myState.winner} Won The Match</p>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default StatusComp;\r\n","import React, { Component } from \"react\";\r\nimport GridComp from \"./GridComp/GridComp\";\r\nimport \"./BoardComp.css\";\r\nimport StatusComp from \"../StatusComp/StatusComp\";\r\n\r\nlet used = new Map();\r\n\r\nclass BoardComp extends Component {\r\n\tstate = {\r\n\t\tplayerMove: 1,\r\n\t\twinner: \"!\",\r\n\t\tisEndGame: false,\r\n\t\tmark1: \"\",\r\n\t\tmark2: \"\",\r\n\t\tmark3: \"\",\r\n\t\tmark4: \"\",\r\n\t\tmark5: \"\",\r\n\t\tmark6: \"\",\r\n\t\tmark7: \"\",\r\n\t\tmark8: \"\",\r\n\t\tmark9: \"\",\r\n\t\tcount: 0,\r\n\t};\r\n\r\n\tresultCheck = () => {\r\n\t\tconst {\r\n\t\t\tmark1,\r\n\t\t\tmark2,\r\n\t\t\tmark3,\r\n\t\t\tmark4,\r\n\t\t\tmark5,\r\n\t\t\tmark6,\r\n\t\t\tmark7,\r\n\t\t\tmark8,\r\n\t\t\tmark9,\r\n\t\t} = this.state;\r\n\r\n\t\tlet mk;\r\n\t\tlet ans = 0;\r\n\t\tlet move;\r\n\r\n\t\tif (this.state.playerMove === 1) move = 2;\r\n\t\telse move = 1;\r\n\r\n\t\tif (move === 1) {\r\n\t\t\tmk = \"X\";\r\n\t\t} else {\r\n\t\t\tmk = \"O\";\r\n\t\t}\r\n\t\tif (mark1 === mk && mark2 === mk && mark3 === mk) ans = 1;\r\n\t\telse if (mark4 === mk && mark5 === mk && mark6 === mk) ans = 1;\r\n\t\telse if (mark7 === mk && mark8 === mk && mark9 === mk) ans = 1;\r\n\t\telse if (mark1 === mk && mark4 === mk && mark7 === mk) ans = 1;\r\n\t\telse if (mark2 === mk && mark5 === mk && mark8 === mk) ans = 1;\r\n\t\telse if (mark3 === mk && mark6 === mk && mark9 === mk) ans = 1;\r\n\t\telse if (mark1 === mk && mark5 === mk && mark9 === mk) ans = 1;\r\n\t\telse if (mark3 === mk && mark5 === mk && mark7 === mk) ans = 1;\r\n\r\n\t\tif (ans) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\twinner: `Player ${move}`,\r\n\t\t\t\tisEndGame: true,\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (this.state.count === 9) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tisEndGame: true,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tHandleGrid = (event) => {\r\n\t\tif (this.state.isEndGame) return new Error(\"Game Has Ended !\");\r\n\t\tlet myNameAttr = event.target.getAttribute(\"name\");\r\n\t\tif (myNameAttr === null) return new Error(\"String is null\");\r\n\r\n\t\tif(!used[myNameAttr]) used[myNameAttr] = true;\r\n\t\telse return new Error(\"Already Used !\");\r\n\r\n\t\tif (this.state.playerMove === 1) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\t[event.target.getAttribute(\"name\")]: \"X\",\r\n\t\t\t\t\tplayerMove: 2,\r\n\t\t\t\t\tcount: this.state.count + 1,\r\n\t\t\t\t},\r\n\t\t\t\t() => this.resultCheck()\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\t[event.target.getAttribute(\"name\")]: \"O\",\r\n\t\t\t\t\tplayerMove: 1,\r\n\t\t\t\t\tcount: this.state.count + 1,\r\n\t\t\t\t},\r\n\t\t\t\t() => this.resultCheck()\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log(\"Winner \", this.state.winner);\r\n\t\treturn (\r\n\t\t\t<div className=\"mainClass\">\r\n\t\t\t\t<div className=\"myBoard row\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark1\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark1}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark2\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark2}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark3\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark3}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark4\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark4}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark5\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark5}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark6\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark6}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark7\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark7}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark8\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark8}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GridComp\r\n\t\t\t\t\t\t\tname=\"mark9\"\r\n\t\t\t\t\t\t\tHandleGrid={this.HandleGrid}\r\n\t\t\t\t\t\t\tmark={this.state.mark9}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"myStatusClass\">\r\n\t\t\t\t\t<StatusComp myState={this.state} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BoardComp;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport BoardComp from \"./components/BoardComp/BoardComp\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App container\">\n\t\t\t\t<p className=\"text-center\">Let's Play Tic Tac Toe</p>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-sm-12 leftSide\">\n\t\t\t\t\t\t<BoardComp />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}